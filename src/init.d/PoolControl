#!/bin/sh

#############################################
###        optionales Init Script         ###
#############################################
### PoolControl wird nur                  ###
###                   "einmalig"          ###
###                        ausgefuehrt!!! ###
#############################################


### BEGIN INIT INFO
# Provides:          Temp-Protokoll
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Temp-Protokoll initscript
# Description: Temp-Protokoll initscript
### END INIT INFO
 
# Change the next 3 lines to suit where you install your script and what you want to call it
#DIR=/opt/TempController
DIR=/opt/PoolControl
DAEMON=$DIR/start.py
DAEMON_NAME=PoolControl
 
# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root
 
# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid
 
. /lib/lsb/init-functions
 
do_start () 
{
	log_daemon_msg "Starte $DAEMON_NAME daemon"
	start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --startas $DAEMON
	log_end_msg $?
}

do_stop () 
{
	log_daemon_msg "$DAEMON_NAME daemon wird beendet"
	echo ""
	start-stop-daemon --stop --pidfile $PIDFILE --retry 10
	#if [ 0 ];
	#then
            # Pidfile löschen.
         #   rm -f $PIDFILE

	# Falls das Prog manuell gestartet wird existiert kein Pidfile. 
	# Dann beenden wir das Prog halt so...
	if [ 1 ]; 
	then 
	#else
		#echo "Fehlgeschlagen"
		echo "Suche nach manuell gestarteten Prozessen & versuchen diese zu beenden..."
     		sudo killall $DAEMON_NAME.sh 
	fi
	log_end_msg $?
	# Pidfile löschen.
        rm -f $PIDFILE
}


case "$1" in
 
start|stop)
do_${1}
;;
 
restart|reload|force-reload)
do_stop
do_start
;;
 
status)
status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
;;
*)
echo "Usage: /etc/init.d/$DEAMON_NAME {start|stop|restart|status}"
exit 1
;;
 
esac
exit 0
